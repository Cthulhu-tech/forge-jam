export const SUBTILE = 16;
export const TILECOUNT_PER_SET = 48;

export const INDEX_ARRS: number[][] = [
  [10,  9,  4,  3], // 0000
  [10,  9,  4, 13], // 0001
  [10,  9, 18,  3], // 0010
  [10,  9, 16, 15], // 0011
  [10, 43,  4,  3], // 0100
  [10, 31,  4, 25], // 0101
  [10,  7,  2,  3], // 0110
  [10, 31, 16,  5], // 0111
  [48,  9,  4,  3], // 1000
  [ 8,  9,  4,  1], // 1001
  [36,  9, 30,  3], // 1010
  [36,  9,  6, 15], // 1011
  [46, 45,  4,  3], // 1100
  [46, 11,  4, 25], // 1101
  [12, 45, 30,  3], // 1110
  [34, 33, 28, 27], // 1111
];

export const roomPrefabs: RoomPrefab[] = [
  {
    wallKey: 'library',
    floorKey: 'tree',
    shape: [[1,1,1],[1,1,1],[1,1,1]],
    percent: 25,
    min: 2
  },
  {
    wallKey: 'medic', // - общий вид стен комнат
    floorKey: 'glass', // - общий вид пола комнат
    shape: [
      [1, 1, 1],
      [1, 1, 1],
      [1, 0, 1],
      [1, 1, 1],
      [1, 1, 1],
    ],
    environments: [
      {
        element: 'tree', // - это элемент который будет на полу
        data: [
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 0, 0],
        ],
        collision: true, // - колизия на элемент
      },
      {
        element: 'iron', // - это элемент который будет на полу
        data: [
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
        ],
        collision: true, // - колизия на элемент
      }
    ],
    count: 1,
  },
  {
    wallKey: 'start',
    floorKey: 'start',
    percent: 100,
    shape: [
      [1, 1, 1],
      [1, 1, 1],
      [1, 1, 1],
      [1, 1, 1],
      [1, 1, 1],
    ],
    count: 1,
    max: 1,
  },
  {
    wallKey: 'end',
    floorKey: 'glass',
    shape: [
      [1, 1, 1],
      [1, 1, 1],
      [1, 0, 1],
      [1, 1, 1],
      [1, 1, 1],
    ],
    environments: [
      {
        element: 'tree', // - это элемент который будет на полу
        data: [
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 0, 0],
        ],
        collision: true, // - колизия на элемент
      },
      {
        element: 'iron', // - это элемент который будет на полу
        data: [
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [0, 0, 1, 1],
        ],
        collision: true, // - колизия на элемент
      }
    ],
    count: 1,
    max: 1
  },
  {
    wallKey: 'library',
    floorKey: 'tree',
    shape: [
      [1, 1, 1],
      [1, 1, 1],
      [1, 0, 1],
      [1, 1, 1],
      [1, 1, 1],
    ],
    environments: [
      {
        element: 'tree', // - это элемент который будет на полу
        data: [
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 0, 0],
        ],
        collision: true, // - колизия на элемент
      },
      {
        element: 'iron', // - это элемент который будет на полу
        data: [
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [1, 1, 1, 1],
          [0, 0, 1, 1],
        ],
        collision: true, // - колизия на элемент
      }
    ],
  }
];
